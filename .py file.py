# -*- coding: utf-8 -*-
"""Untitled2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/13-7IAzMv0DPgi-zOwAYY8F1lx3v7MCDN
"""

import pandas as pd
import numpy as np
import seaborn as sns
import matplotlib. pyplot as plt
from matplotlib import rcParams
from scipy import stats

data=pd.read_csv('indian_liver_patient.csv')
data.head()

"""# New section"""

data.info()

data.isnull().any()

data.isnull().sum()

data['Albumin_and_Globulin_Ratio']
data.isnull().sum()

from sklearn.preprocessing import LabelEncoder 
lc = LabelEncoder()
data.['gender']= lc.fit_transform(data['gender'])

data.describe()

sns.distplot(data['Age'])
plt.title('Age Distribution Graph')
plt.show()

sns.countplot(data['output'],hue=data['gender'])

<matplotlib.axes._subplots.AxesSubplot at 0x1a9f73fbf60>

pip install imblearn

from imblearn.over_sampling import SMOTE
smote - SMOTE()

y_train.value_counts()

x_train_smote,y_train_smote =  smote.fit_resample(X_train, y_train)
y_train_smote.value_counts()

from sklearen.ensample import RandomForestClassifier
model1=RandomForestClassifier()
model1.fit(X_train_smote, y_train_smote)
y_predict=model1.predict(x_test)
rfc1=accuracy_score(y_test,y_predict)
rfc1
pd.crosstab(y_test, y_predict)
print(classification_report(y_test,y _predict))

from sklearn.tree import DecisionTreeClassofier
model4=DecisionTreeclassifier()
model4.fit(X_train_smote, y_train_smote)
y_predict=model4.predict(X_test)
dtc1=accuracy_score(y_test,y_predict)
dtc1
pd.crosstab(y_test,y_predict)
print(classification_report(y_test, y_predict))

from sklearn.neighbors import kNeighborsClassifier
model2=kNeighborsClassifier()
model2.fit(X_train_smote, y_train_smote)
y_predict = model2.predict(X_test)
knn1=(accuracy_score(y_test,  y_predict))
knn1
ped.crosstab(y_test,y_predict)
print(classification_report(y_test, y_predict))